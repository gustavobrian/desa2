{"version":3,"file":"outside-event-plugin.js","sourceRoot":"","sources":["outside-event-plugin.ts"],"names":[],"mappings":"AAAA,uBAAuB;AACvB,wGAAwG;;;;;;;;;;;;;;;;AAExG,qBAAyB,eAAe,CAAC,CAAA;AACzC,iCAA8B,2BAA2B,CAAC,CAAA;AAC1D,4BAAiC,+CAA+C,CAAC,CAAA;AACjF,qBAAmB,+BAA+B,CAAC,CAAA;AAEnD,IAAM,QAAQ,GAAG;IACb,YAAY,EAAE,OAAO;IACrB,gBAAgB,EAAE,WAAW;IAC7B,cAAc,EAAE,SAAS;IACzB,gBAAgB,EAAE,WAAW;CAChC,CAAC;AAEF;;;;;;GAMG;AACH,yCAAyC,OAAoB,EAAE,OAAwB;IACnF,MAAM,CAAC,UAAC,KAAK;QACT,IAAI,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC;QAC3B,GAAG,CAAC;YACA,EAAE,CAAC,CAAE,OAAO,KAAK,OAAQ,CAAC,CAAC,CAAC;gBACxB,MAAM,CAAC;YACX,CAAC;QACL,CAAC,QAAS,OAAO,CAAC,UAAU,IAAI,CAAE,OAAO,GAAG,OAAO,CAAC,UAAU,CAAE,EAAG;QAEnE,OAAO,CAAC,KAAK,CAAC,CAAC;IACnB,CAAC,CAAC;AACN,CAAC;AAGD;IAA2C,yCAAe;IAEtD;QACI,iBAAO,CAAC;QACR,IAAI,CAAC,IAAI,GAAG,oBAAM,EAAE,CAAC;IACzB,CAAC;IACD,wCAAQ,GAAR,UAAS,SAAiB;QACtB,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;IAC9C,CAAC;IAED,gDAAgB,GAAhB,UAAiB,OAAoB,EAAE,SAAiB,EAAE,OAAiB;QAA3E,iBA8BC;QA7BG,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QAEpC,8EAA8E;QAC9E,4FAA4F;QAC5F,yFAAyF;QACzF,iCAAiC;QACjC,uFAAuF;QACvF,IAAM,aAAa,GAAG,cAAM,OAAA,KAAI,CAAC,IAAI,CAAC,WAAW,CAC7C,KAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,EAC1C,QAAQ,CAAC,SAAS,CAAC,EACnB,+BAA+B,CAAC,OAAO,EAAE,UAAA,GAAG,IAAI,OAAA,IAAI,CAAC,UAAU,CAAC,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,EAAZ,CAAY,CAAC,EAAnC,CAAmC,CAAC,CACvF,EAJ2B,CAI3B,CAAC;QAEF,0FAA0F;QAC1F,2BAA2B;QAC3B,wFAAwF;QACxF,wFAAwF;QACxF,wFAAwF;QACxF,qCAAqC;QACrC,wFAAwF;QACxF,iFAAiF;QACjF,qFAAqF;QACrF,mCAAmC;QACnC,EAAE;QACF,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC;YAC1B,IAAI,EAAY,CAAC;YACjB,UAAU,CAAC,cAAM,OAAA,EAAE,GAAG,aAAa,EAAE,EAApB,CAAoB,EAAE,CAAC,CAAC,CAAC;YAC1C,MAAM,CAAC,cAAM,OAAA,EAAE,EAAE,EAAJ,CAAI,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,sDAAsB,GAAtB,UAAuB,MAAc,EAAE,SAAiB,EAAE,OAAiB;QAA3E,iBAeC;QAdG,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,UAAU,CAAC,IAAI,CAAC,MAAM,KAAK,QAAQ,CAAE,CAAC,CAAC,CAAC;YACpD,MAAM,CAAC,WAAI,CAAC;QAChB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAM,SAAO,GAAG,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,EAChD,MAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YAEpC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,iBAAiB,CAC3C,cAAM,OAAA,KAAI,CAAC,IAAI,CAAC,WAAW,CACvB,SAAO,EACP,SAAS,EACT,UAAA,GAAG,IAAI,OAAA,MAAI,CAAC,UAAU,CAAC,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,EAAZ,CAAY,CAAC,EAAnC,CAAmC,CAC7C,EAJK,CAIL,CACJ,CAAC;QACN,CAAC;IACL,CAAC;IA1DL;QAAC,iBAAU,EAAE;;6BAAA;IA2Db,4BAAC;AAAD,CAAC,AA1DD,CAA2C,kCAAe,GA0DzD;AA1DY,6BAAqB,wBA0DjC,CAAA","sourcesContent":["// heavily inspired by:\n// http://www.bennadel.com/blog/3025-creating-custom-dom-and-host-event-bindings-in-angular-2-beta-6.htm\n\nimport {Injectable} from '@angular/core';\nimport {DomEventsPlugin} from '@angular/platform-browser';\nimport {getDOM, DomAdapter} from '@angular/platform-browser/src/dom/dom_adapter';\nimport {noop} from '@angular/core/src/facade/lang';\n\nconst eventMap = {\n    clickOutside: 'click',\n    mousedownOutside: 'mousedown',\n    mouseupOutside: 'mouseup',\n    mousemoveOutside: 'mousemove'\n};\n\n/**\n * An event handler factory for event handlers that bubble the event to a given handler\n * if the event target is not an ancestor of the given element.\n * @param element\n * @param handler\n * @returns {function(any): undefined}\n */\nfunction bubbleNonAncestorHandlerFactory(element: HTMLElement, handler: (event) => void) {\n    return (event) => {\n        let current = event.target;\n        do {\n            if ( current === element ) {\n                return;\n            }\n        } while ( current.parentNode && ( current = current.parentNode ) );\n\n        handler(event);\n    };\n}\n\n@Injectable()\nexport class DOMOutsideEventPlugin extends DomEventsPlugin {\n    private _DOM: DomAdapter;\n    constructor() {\n        super();\n        this._DOM = getDOM();\n    }\n    supports(eventName: string): boolean {\n        return eventMap.hasOwnProperty(eventName);\n    }\n\n    addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n        const zone = this.manager.getZone();\n\n        // A Factory that registers the event on the document, instead of the element.\n        // the handler is created at runtime, and it acts as a propagation/bubble predicate, it will\n        // bubble up the event (i.e: execute our original event handler) only if the event targer\n        // is an ancestor of our element.\n        // The event is fired inside the angular zone so change detection can kick into action.\n        const onceOnOutside = () => this._DOM.onAndCancel(\n            this._DOM.getGlobalEventTarget('document'),\n            eventMap[eventName],\n            bubbleNonAncestorHandlerFactory(element, evt => zone.runGuarded(() => handler(evt)))\n        );\n\n        // we run the event registration for the document in a different zone, this will make sure\n        // change detection is off.\n        // It turns out that if a component that use DOMOutsideEventPlugin is built from a click\n        // event, we might get here before the event reached the document, causing a quick false\n        // positive handling (when stopPropagation() was'nt invoked). To workaround this we wait\n        // for the next vm turn and register.\n        // Event registration returns a dispose function for that event, angular use it to clean\n        // up after component get's destroyed. Since we need to return a dispose function\n        // synchronously we have to put a wrapper for it since we will get it asynchronously,\n        // i.e: after we need to return it.\n        //\n        return zone.runOutsideAngular(() => {\n            let fn: Function;\n            setTimeout(() => fn = onceOnOutside(), 0);\n            return () => fn();\n        });\n    }\n\n    addGlobalEventListener(target: string, eventName: string, handler: Function): Function {\n        if ((target === 'document') || (target === 'window' )) {\n            return noop;\n        } else {\n            const element = this._DOM.getGlobalEventTarget(target),\n                  zone = this.manager.getZone();\n\n            return this.manager.getZone().runOutsideAngular(\n                () => this._DOM.onAndCancel(\n                    element,\n                    eventName,\n                    evt => zone.runGuarded(() => handler(evt))\n                )\n            );\n        }\n    }\n}\n"]}